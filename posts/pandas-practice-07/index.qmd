---
title: "pandas basic"
author: "Jie Wang"
date: "2022-08-15"
categories: [pandas]
image: "pandas.png"
jupyter: python3
---


# DataFrame indexing
<https://pandas.pydata.org/docs/user_guide/indexing.html#different-choices-for-indexing>

<https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.loc.html?highlight=loc#>

## .loc()

```{python}
import pandas as pd

df = pd.DataFrame(
    [
        [1, 3],
        [2, 4],
        [3, 5]
    ],
    index=['cobra', 'viper', 'sidewinder'],
    columns=['max_speed', 'shield']
)

print(df)

```

### single label: returns row as a Series
```{python}
res = df.loc['viper']
print(type(res))
print(res)
```

### list of labels: returns a DataFrame

```{python}
res = df.loc[['viper', 'cobra']]
print(type(res))
print(res)
```

### single lable for row and column: returns a single value

```{python}
res = df.loc['viper','max_speed']
print(type(res))
print(res)
```

### labels for row and single label for column

```{python}
res = df.loc['viper':'sidewinder', 'max_speed']
print(type(res))
print(res)
```

### Boolean list with the same length as the row axis

```{python}
res = df.loc[[True, False, True]]
print(type(res))
print(res)
```

## .iloc(): purely integer-location based indexing

### a single integer

```{python}
res = df.iloc[0]
print(type(res))
print(res)
```

### a list of integers

```{python}
res = df.iloc[[1,2]]
print(type(res))
print(res)
```

### indexing row and column 

```{python}
res = df.iloc[0,1]
print(type(res))
print(res)
```

### `:` for the entire axis
```{python}
res = df.iloc[:, :2]
print(res)
print(type(res))
```


